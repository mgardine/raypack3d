function ray_invert_ttfile(varargin)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Function ray_invert_ttfile
%
% This function is a front-end to the raytrace3d invert routine using a 
% travel time file created by the user or generated by routines such as 
% raytrace3d source_to_receivers. Note: this routine currently assumes that 
% the travel time file only includes P waves (although it can be easily 
% modified to include S waves as well).
%
% Usage: ray_invert_ttfile(tt_file,model_file,model_pars_file,damping)
%
% Required Inputs:
%   tt_file:         A text file of travel times in the format as output by 
%                    routines such as raytrace3d source_to_receivers
%
%   model_file:      The starting 3D model file used in any raytrace3d routine
%
%   model_pars_file: The path to the input_mps.txt file required by
%                    raytrace3d invert (see raytrace3d help for file
%                    description)
%
%   damping:         The value of the damping parameter to be used in the
%                    inversion
%
% Output (to filesystem):
%   inversion_model.model:      The model result from the inversion
%
%   inversion_model.model.hits: The number of ray hits at each model node
%
%
% Author:
% Matt Gardine
% February 2009
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

switch nargin
    case 4
        tt_file=varargin{1};
        model_file=varargin{2};
        model_pars_file=varargin{3};
        damping=varargin{4};
        
        [id x0 y0 z0 x1 y1 z1 T0 Ta TT T dT ratio obs_order pre_order amplitude ntts]=textread(tt_file,'%d %f %f %f %f %f %f %f %f %f %f %f %f %d %d %f %d','headerlines',1);

        fid = fopen('./traveltimes.tsv','wt');

        for i=1:length(id)
            fprintf(fid,'%f %f %f %f %f %f 0 0 %f 1 0\n',x0(i),y0(i),z0(i),x1(i),y1(i),z1(i),TT(i));
        end

        fclose(fid);

        runstring = ['raytrace3d invert ' model_file ' ' model_pars_file ' ./traveltimes.tsv 5 ' num2str(damping)...
            ' 0 180 181 0 360 361 ./inversion_model.model >& invert_output.log'];
        system(runstring);
        
    otherwise
        help ray_invert_ttfile
        return;
end